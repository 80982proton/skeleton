services:
    pimcore.legacy_kernel:
        class: PimcoreBundle\HttpKernel\LegacyKernel
        arguments: ['@kernel']

    pimcore.router.dynamic_route_provider:
        class: PimcoreBundle\Routing\DocumentRouteProvider

    pimcore.plugin_broker:
        class: Pimcore\API\Plugin\Broker

    pimcore.value_resolver.document:
        class: PimcoreBundle\ArgumentResolver\DocumentValueResolver
        arguments: ['@pimcore.service.request.document_resolver']
        tags:
            - { name: controller.argument_value_resolver }

    pimcore.value_resolver.template_vars:
        class: PimcoreBundle\ArgumentResolver\TemplateVarsValueResolver
        arguments: ['@pimcore.service.request.template_vars_resolver']
        tags:
            - { name: controller.argument_value_resolver }

    pimcore.zend_view_provider:
        class: PimcoreBundle\View\ZendViewProvider
        arguments: ['@pimcore.legacy_kernel']

    # TODO inject user?
    pimcore.document_service:
        class: Pimcore\Model\Document\Service

    pimcore.service.request.editmode_resolver:
        class: PimcoreBundle\Service\Request\EditmodeResolver
        arguments: ['@request_stack']

    pimcore.service.request.document_resolver:
        class: PimcoreBundle\Service\Request\DocumentResolver
        arguments: ['@request_stack']

    pimcore.service.request.template_vars_resolver:
        class: PimcoreBundle\Service\Request\TemplateVarsResolver
        arguments: ['@pimcore.service.request.document_resolver', '@pimcore.service.request.editmode_resolver']

    # simple services exposing get() API for documents, objects and assets
    # this is only necessar if loading objects directly with only access to the container, e.g. templates
    pimcore.service.document:
        class: PimcoreBundle\Service\Document\DocumentService

    pimcore.service.asset:
        class: PimcoreBundle\Service\Asset\AssetService

    pimcore.service.object:
        class: PimcoreBundle\Service\Object\ObjectService
